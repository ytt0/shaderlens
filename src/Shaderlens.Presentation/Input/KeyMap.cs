namespace Shaderlens.Presentation.Input
{
    public static class KeyMap
    {
        private static readonly Dictionary<Key, int> Map = CreateKeyMap();

        private static Dictionary<Key, int> CreateKeyMap()
        {
            var map = new Dictionary<Key, int>
            {
                { Key.Back, 8 },
                { Key.Tab, 9 },
                { Key.Enter, 13 },
                { Key.LeftShift, 16 },
                { Key.RightShift, 16 },
                { Key.LeftCtrl, 17 },
                { Key.RightCtrl, 17 },
                { Key.LeftAlt, 18 },
                { Key.RightAlt, 18 },
                { Key.Pause, 19 },
                { Key.CapsLock, 20 },
                { Key.Escape, 27 },
                { Key.Space, 32 },
                { Key.PageUp, 33 },
                { Key.PageDown, 34 },
                { Key.End, 35 },
                { Key.Home, 36 },
                { Key.Left, 37 },
                { Key.Up, 38 },
                { Key.Right, 39 },
                { Key.Down, 40 },
                { Key.PrintScreen, 44 },
                { Key.Insert, 45 },
                { Key.Delete, 46 },
                { Key.NumPad0, 48 },
                { Key.NumPad1, 49 },
                { Key.NumPad2, 50 },
                { Key.NumPad3, 51 },
                { Key.NumPad4, 52 },
                { Key.NumPad5, 53 },
                { Key.NumPad6, 54 },
                { Key.NumPad7, 55 },
                { Key.NumPad8, 56 },
                { Key.NumPad9, 57 },
                { Key.OemSemicolon, 59 },
                { Key.OemPlus, 61 },
                { Key.A, 65 },
                { Key.B, 66 },
                { Key.C, 67 },
                { Key.D, 68 },
                { Key.E, 69 },
                { Key.F, 70 },
                { Key.G, 71 },
                { Key.H, 72 },
                { Key.I, 73 },
                { Key.J, 74 },
                { Key.K, 75 },
                { Key.L, 76 },
                { Key.M, 77 },
                { Key.N, 78 },
                { Key.O, 79 },
                { Key.P, 80 },
                { Key.Q, 81 },
                { Key.R, 82 },
                { Key.S, 83 },
                { Key.T, 84 },
                { Key.U, 85 },
                { Key.V, 86 },
                { Key.W, 87 },
                { Key.X, 88 },
                { Key.Y, 89 },
                { Key.Z, 90 },
                { Key.Apps, 93 },
                { Key.D0, 96 },
                { Key.D1, 97 },
                { Key.D2, 98 },
                { Key.D3, 99 },
                { Key.D4, 100 },
                { Key.D5, 101 },
                { Key.D6, 102 },
                { Key.D7, 103 },
                { Key.D8, 104 },
                { Key.D9, 105 },
                { Key.Multiply, 106 },
                { Key.Add, 107 },
                { Key.Subtract, 109 },
                { Key.Decimal, 110 },
                { Key.Divide, 111 },
                { Key.F1, 112 },
                { Key.F2, 113 },
                { Key.F3, 114 },
                { Key.F4, 115 },
                { Key.F5, 116 },
                { Key.F6, 117 },
                { Key.F7, 118 },
                { Key.F8, 119 },
                { Key.F9, 120 },
                { Key.F10, 121 },
                { Key.F11, 122 },
                { Key.F12, 123 },
                { Key.NumLock, 144 },
                { Key.Scroll, 145 },
                { Key.OemMinus, 173 },
                { Key.OemComma, 188 },
                { Key.OemPeriod, 190 },
                { Key.OemQuestion, 191 },
                { Key.OemTilde, 192 },
                { Key.OemOpenBrackets, 219 },
                { Key.OemPipe, 220 },
                { Key.OemCloseBrackets, 221 },
                { Key.OemQuotes, 222 },
            };

            return map;
        }

        public static bool TryGetIndex(Key key, out int index)
        {
            return Map.TryGetValue(key, out index);
        }
    }
}
